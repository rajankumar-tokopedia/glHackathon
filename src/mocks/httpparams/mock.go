// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/rajankumar549/glHackathon/src/interfaces/server (interfaces: HttpParams)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockHttpParams is a mock of HttpParams interface
type MockHttpParams struct {
	ctrl     *gomock.Controller
	recorder *MockHttpParamsMockRecorder
}

// MockHttpParamsMockRecorder is the mock recorder for MockHttpParams
type MockHttpParamsMockRecorder struct {
	mock *MockHttpParams
}

// NewMockHttpParams creates a new mock instance
func NewMockHttpParams(ctrl *gomock.Controller) *MockHttpParams {
	mock := &MockHttpParams{ctrl: ctrl}
	mock.recorder = &MockHttpParamsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockHttpParams) EXPECT() *MockHttpParamsMockRecorder {
	return m.recorder
}

// ByName mocks base method
func (m *MockHttpParams) ByName(arg0 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ByName", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// ByName indicates an expected call of ByName
func (mr *MockHttpParamsMockRecorder) ByName(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ByName", reflect.TypeOf((*MockHttpParams)(nil).ByName), arg0)
}
